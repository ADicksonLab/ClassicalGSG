* ClassicalGSG: Prediction of logP Using Classical Molecular Dynamics Atomic Attributes and  Geometric Scattering Graphs

This project is the implementation of a method called ~ClassicalGSG~
and has introduced in ~paper~.  In this project, we aim to predict the
partition coefficient value for the small molecules.

We employ atomic attributes that are typically used as input
parameters to molecular dynamics simulations. These atomic attributes
are generated using two classical molecular dynamics force fields
generator tool [[https://cgenff.umaryland.edu][CGenFF]] and [[https://ambermd.org/AmberTools.php][Ambertools]].

These atomic attributes are transformed into index-variant molecular
features using a recently developed method called [[https://arxiv.org/abs/1810.03068][Geometric Scattering
for Graphs]] (GSG).  We train ClassicalGSG logP predictor models
with neural networks (NNs) which are implemented using [[https://pytorch.org][PyTorch]].


* Installation

You should use conda to make a new virtual environment:

#+begin_src sh
  conda create -n myenv python=3.7
  conda activate myenv
#+end_src

Currently you must manually install some of the dependencies using
conda. Do this first:

#+begin_src sh
  conda install -c pytorch pytorch
  conda install -c conda-forge openbabel rdkit
#+end_src

Then install the package. Currently no packages are on PyPI so just
install from the git repo:

#+begin_src sh
pip install git+https://github.com/ADicksonLab/ClassicalGSG.git
#+end_src

# TODO: inform about customizing pytorch installation

* Usage

To use our ClassicalGSG logP predictor model run the following command:

#+BEGIN_SRC bash
 python -m LogpPredictor molecule.mol2 molecule.str
#+END_SRC

You can generate CGenFF parameter files for your molecule using [[https://cgenff.umaryland.edu][CGenFF]]
online server.
